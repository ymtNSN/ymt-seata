transport {
  # tcp udt unix-domain-socket, 连接采用TCP协议
  type = "TCP"
  #NIO NATIVE, 采用NIO模式流
  server = "NIO"
  #enable heartbeat, 启用心跳
  heartbeat = true
  # the client batch send request enable, 客户端批量发送请求启用
  enableClientBatchSendRequest = true
  #thread factory for netty, 网络线程工厂
  threadFactory {
    bossThreadPrefix = "NettyBoss"
    workerThreadPrefix = "NettyServerNIOWorker"
    serverExecutorThread-prefix = "NettyServerBizHandler"
    shareBossWorker = false
    clientSelectorThreadPrefix = "NettyClientSelector"
    clientSelectorThreadSize = 1
    clientWorkerThreadPrefix = "NettyClientWorkerThread"
    # netty boss thread size,will not be used for UDT
    bossThreadSize = 1
    #auto default pin or 8
    workerThreadSize = "default"
  }
  shutdown {
    # when destroy server, wait seconds, 销毁服务器时，请等待几秒钟
    wait = 3
  }
  serialization = "seata"
  compressor = "none"
}
service {
  #transaction service group mapping
  vgroupMapping.order-service-group = "default"
  #only support when registry.type=file, please don't set multiple addresses, 仅在registry.type = file时才支持，请不要设置多个地址
  default.grouplist = "119.29.151.146:8091"
  #degrade, current not support, 降级，当前不支持
  enableDegrade = false
  #disable seata
  disableGlobalTransaction = false
}

client {
  rm {
    asyncCommitBufferLimit = 10000  # 异步提交缓存队列长度（默认10000）
    lock {
      retryInterval = 10 # 校验或占用全局锁重试间隔（默认10ms）
      retryTimes = 30 # 校验或占用全局锁重试次数（默认30）
      retryPolicyBranchRollbackOnConflict = true # 分支事务与其它全局回滚事务冲突时锁策略（优先释放本地锁让回滚成功）
    }
    reportRetryCount = 5 # 一阶段结果上报TC重试次数（默认5）
    tableMetaCheckEnable = false # 自动刷新缓存中的表结构（默认false）
    reportSuccessEnable = true #报告成功启用
  }
  tm {
    commitRetryCount = 5    # 一阶段全局提交结果上报TC重试次数（默认1次，建议大于1）
    rollbackRetryCount = 5  # 一阶段全局回滚结果上报TC重试次数（默认1次，建议大于1）
  }
  undo {
    dataValidation = true   # 二阶段回滚镜像校验（默认true开启）
    logSerialization = "jackson"    # undo序列化方式（默认jackson）
    logTable = "undo_log"   # 自定义undo表名（默认undo_log）
  }
  log {
    exceptionRate = 100     # 日志异常输出概率（默认100）
  }
}